/*
	Binding C++ API de kpl v0.1
*/
#if !existFunction(kplBind)

#include "kplNode.inc.cws"

declare function	kplBindCXX<T>(theNode : node, out_tree : node);
declare function	kplBind<T>(theNode : node, out_tree : node);

function	kplBindCXX<T>(theNode : node, out_tree : node)
{
	pushItem out_tree = T + " NOT IMPLEMENTED";
	traceLine(out_tree#back);
}

function	kplBindCXX<"scalar">(theNode : node, out_tree : node)
{
  traceLine("COOL");

}

function	kplBindCXX<"struct">(theNode : node, out_tree : node)
{
  traceLine("COOL");
  foreach field in theNode.fields
  {
    kplBindCXX<field.type>(field, out_tree);
  }
}

function	kplBindCXX<"type">(theNode : node, out_tree : node)
{
  traceLine("COOL");
  foreach field in theNode.fields
  {
    kplBindCXX<field.type>(field, out_tree);
  }
}


function	kplBind<T>(theNode : node, out_tree : node)
{
  traceLine("LANGUAGE " + T + " not supported");
}

function	kplBind<"CXX">(theNode : node, out_tree : node)
{
	local	sStr = "//translated to CXX\n";
	traceObject(theNode);
	Kpl_initOutNode(out_tree);
	foreach oNode in theNode.block
	{
		sStr += kplBindCXX<oNode.type>(oNode, out_tree);
	}
	return sStr;
}

#end
